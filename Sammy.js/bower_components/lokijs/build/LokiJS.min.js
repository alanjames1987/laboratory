/*! LokiJS 2013-07-27 */
"use strict";function trace(a){try{LokiJS.DEBUG_MODE&&console.log(a)}catch(b){}}var LokiJS=LokiJS||{};LokiJS={version:"0.0.1",DEBUG_MODE:!0},window.loki=function(){function a(a){var c=a,d=[];trace("Creating db "+c),this.getName=function(){return e.apply(this,["name"])},this.addCollection=function(a,c,e){var f=new b(a,c,e);return d.push(f),f},this.loadCollection=function(a){d.push(a)},this.listCollections=function(){},this.serialize=function(){return JSON.stringify(d)},this.load=function(){},this.syncRemote=function(){};var e=function(a){return a}}function b(a,b,c){this.name=a,this.data=[],this.indices=[],this.objType=b||"";var d=this;trace("Creating collection with name ["+this.name+"] of type ["+this.objType+"]"),this.add=function(a){if("object"!=typeof a)throw"Object being added needs to be an object";if(""==d.objType&&0==d.data.length)d.objType=a.objType;else{if(d.objType!=a.objType)throw"Object type ["+a.objType+"] is incongruent with collection type ["+d.objType+"]";if(""==d.objType)throw"Object is not a model";if(trace("Adding object "+a.toString()+" to collection "+d.name),null!=a.id&&a.id>0)throw"Document is already in collection, please use update()";a.id=(new Date).getTime(),d.data.push(a);for(var b=d.indices.length;b--;)d.indices[b].data.push(a[d.indices[b].name])}},this.addMany=function(){for(var a=arguments.length;a--;)d.add(arguments[a])},this.document=function(a){return trace("_objType : "+d.objType),trace(a),null==a.id,a.objType=d.objType,d.add(a),a},this.ensureIndex=function(a){if(null==a||void 0===a)throw"Attempting to set index without an associated property";for(var b={name:a,data:[]},c=d.indices.length;c--;)d.indices[c].name==a?(trace("Index "+a+" already exists, re-indexing...."),b=d.indices[c]):trace("Creating new index "+a);d.indices.push(b),delete b.data,b.data=new Array;for(var c=d.data.length;c--;)b.data.push(d.data[c][b.name]),trace("Storing into index "+b.name+" value "+b.data[c]);trace(d.indices)},this.ensureIndexAsync=function(a,b){trace("Calling ensureIndexAsync..."),setTimeout(function(){d.ensureIndex(a),b()},1),trace("started indexing...")},this.ensureAllIndexes=function(){for(var a=d.indices.length;a--;)d.ensureIndex(d.indices[a].name)},this.ensureAllIndexesAsync=function(a){trace("Calling ensureAllIndexesAsync...");var a=a||d.no_op;setTimeout(function(){d.ensureAllIndexes(),a()},1)},this.findOne=function(a,b){trace("Querying for "+a+"="+b);for(var c=!1,e=null,f=d.indices.length;f--;)if(d.indices[f].name==a){c=!0,e=d.indices[f],trace("Querying with index"),trace(e);break}if(!c)return d.findOneUnindexed(a,b);for(var f=e.data.length;f--;)if(e.data[f]==b){var g=d.data[f];return g.__pos__=f,g}return null},this.findOneUnindexed=function(a,b){trace("Querying without index");for(var c=d.data.length;c--;){if(d.data[c][a]==b){var e=d.data[c];return e.__pos__=c,e}return null}},this.update=function(a){if(void 0==a.id||null==a.id||a.id<0)throw"Trying to update unsynced document. Please save the document first by using add() or addMany()";var b=d.findOne("id",a.id);trace(b);var c=b.__pos__;delete b.__pos__,d.data[c]=a;for(var e=d.indices.length;e--;)d.indices[e].data[c]=b[d.indices[e].name]},this.delete=function(a){if("object"!=typeof a)throw"Parameter is not an object";if(null==a.id||void 0==a.id)throw"Object is not a document stored in the collection";trace("Deleting object..."),trace(a);var b=d.findOne("id",a.id),c=b.__pos__;delete b.__pos__,d.data.splice(c,1);for(var e=d.indices.length;e--;)d.indices[e].data.splice(c,1)},this.query=function(a,b,c){function e(a,b){return a==b}function f(a,b){return a>b}function g(a,b){return a>=b}function h(a,b){return b>a}function i(a,b){return b>=a}function j(a,b){return a!=b}trace("Operator: "+a);var k={$eq:e,$gt:f,$gte:g,$lt:h,$lte:i,$ne:j};if(null==d.data)throw new TypeError;for(var l=d.data,m=k[a],n=[],o=l.length;o--;)m(l[o][b],c)&&n.push(l[o]);return n},this.filter=function(a,b,c){return d.data.query(a,b,c)},this.find=function(){return d.data},this.no_op=function(){trace("Operation completed.")};var c=c||[];trace("Passed indexes "+c.join(", "));for(var e=c.length;e--;)trace("Initializing index "+c[e]),d.ensureIndex(c[e]);d.ensureIndex("id")}return LokiJS.trace=trace.bind(LokiJS),a}();